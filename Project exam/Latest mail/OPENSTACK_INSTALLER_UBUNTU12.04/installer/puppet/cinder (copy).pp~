#modules needed : cinder,lvm,nova
#use losetup -d to unmount volume


$state_path='/var/lib/cinder/'
$volumes_dir='$state_path/volumes'



package 
{ 
	'cinder-api' :
	ensure => installed,
}
->
package 
{ 
	'cinder-scheduler' :
	ensure => installed,
}
->
package 
{ 
	'cinder-volume' :
	ensure => installed,
}
->
package 
{ 
	'open-iscsi' :
	ensure => installed,
}
->
package 
{ 
	'python-cinderclient' :
	ensure => installed,
}
->
package 
{ 
	'tgt' :
	ensure => installed,
}
->
file
{   
	"/tmp/openstack":
	ensure => "directory",
}
->
file
{   
	"/tmp/openstack/cinder":
	ensure => "directory",
}
->
file 
{ 
'/tmp/openstack/cinder/api-paste.ini':
ensure => present,
source => '/etc/cinder/api-paste.ini',
}
->
cinder_api_paste_ini
{
	'filter:authtoken/paste.filter_factory':
	ensure=>present,	
	value=>'keystone.middleware.auth_token:filter_factory',
}
->
cinder_api_paste_ini
{
	'filter:authtoken/service_protocol':
	ensure=>present,	
	value=>'http',
}
->
cinder_api_paste_ini
{
	'filter:authtoken/service_host':
	ensure=>present,	
	value=>'127.0.0.1',
}
->
cinder_api_paste_ini
{
	'filter:authtoken/service_port':
	ensure=>present,	
	value=>'5000',
}
->
cinder_api_paste_ini
{
	'filter:authtoken/auth_host':
	ensure=>present,	
	value=>'127.0.0.1',
}
->
cinder_api_paste_ini
{
	'filter:authtoken/auth_port':
	ensure=>present,	
	value=>'35357',
}
->
cinder_api_paste_ini
{
	'filter:authtoken/auth_protocol':
	ensure=>present,	
	value=>'http',
}
->
cinder_api_paste_ini
{
	'filter:authtoken/admin_tenant_name':
	ensure=>present,	
	value=>'service',
}
->
cinder_api_paste_ini
{
	'filter:authtoken/admin_user':
	ensure=>present,	
	value=>'cinder',
}
->
cinder_api_paste_ini
{
	'filter:authtoken/admin_password':
	ensure=>present,	
	value=>'openstack',
}
->
file 
{ 
'/tmp/openstack/cinder/cinder.conf':
ensure => present,
source => '/etc/cinder/cinder.conf',
}
->
cinder_config
{
	'DEFAULT/rootwrap_config':
	ensure=>present,	
	value=>'/etc/cinder/rootwrap.conf',
}
->
cinder_config
{
	'DEFAULT/sql_connection':
	ensure=>present,	
	value=>'mysql://cinder:openstack@127.0.0.1/cinder',
}
->
cinder_config
{
	'DEFAULT/api_paste_config':
	ensure=>present,	
	value=>'/etc/cinder/api-paste.ini',
}
->
cinder_config
{
	'DEFAULT/iscsi_helper':
	ensure=>present,	
	value=>'tgtadm',
}
->

cinder_config
{
	'DEFAULT/volume_name_template':
	ensure=>present,	
	value=>'volume-%s',
}
->
cinder_config
{
	'DEFAULT/volume_group':
	ensure=>present,	
	value=>'cinder-volumes',
}
->
cinder_config
{
	'DEFAULT/verbose':
	ensure=>present,	
	value=>'True',
}
->
cinder_config
{
	'DEFAULT/auth_strategy':
	ensure=>present,	
	value=>'keystone',
}
->
cinder_config
{
	'DEFAULT/osapi_volume_listen_port':
	ensure=>absent,	
}
->
cinder_config
{
	'DEFAULT/rabbit_host':
	ensure=>present,
	value=>'127.0.0.1',
}
->
cinder_config
{
	'DEFAULT/rabbit_port':
	ensure=>present,
	value=>'5672',	
}
->
cinder_config
{
	'DEFAULT/rabbit_userid':
	ensure=>present,
	value=>'rabbit',	
}
->
cinder_config
{
	'DEFAULT/rabbit_password':
	ensure=>present,
	value=>'secure_password',
}
->
cinder_config
{
	'DEFAULT/rabbit_virtual_host':
	ensure=>present,
	value=>'/nova',
}
->
nova_config
{
	'DEFAULT/volume_api_class':
	ensure=>present,
	value=>'nova.volume.cinder.API'
}
->
mysqlexec::db
{	
	'creating database':
	host=>localhost,
	username=>root,
	dbname=>cinder,
	ensure=>present,
}
->
mysqlexec::user
{	
	'granting access localhost':
	host=>localhost,
	username=>root,
	privileges =>[ALL],
	dbpassword=>'openstack',
	dbname =>cinder,
	ensure=>present,
}
->
mysqlexec
{
	'flushing privileges':
	host=>localhost,
	username=>root,
	mysqlcommand=>'flush privileges',
}

#lvm.conf to be edited

->
file 
{ 
   '/etc/environment':
   content => inline_template("state_path=${state_path}\nvolumes_dir=${volumes_dir} ")
}
->
exec 
{ 
	"directing output":
	command=>shellquote("/bin/sh","-c","echo 'include $volumes_dir/*' >> /etc/tgt/conf.d/cinder.conf")
}
->
exec 
{ 
	'restart tgt':
	command=>'/usr/sbin/service tgt restart',
}
->
exec 
{ 
	'database sync':
	command=>'/usr/bin/cinder-manage db sync',
}
->
exec 
{ 
	'creating test loopfile':
	command=>'/bin/dd if=/dev/zero of=cinder-volumes bs=1 count=0 seek=2G',
}
->
exec 
{ 
	'mounting':
	command=>'/sbin/losetup /dev/loop2 cinder-volumes',
}
->
physical_volume
{
	'/dev/loop2':
	ensure=>present,
}
->
volume_group
{
	'cinder-volumes':
	ensure=>present,
	physical_volumes=>'/dev/loop2'	
}
->
file 
{ 
	'creating backing file':
	path=>'/etc/init.d/cinder-setup-backing-file',
	ensure => 'present',
}
->
file_line 
{ 
	'backing file':
	path => '/etc/init.d/cinder-setup-backing-file',
	line => 'losetup /dev/loop2 cinder-volumes
			exit 0',
	ensure=>present,
}
->
exec 
{ 
	'making file executable':
	command=>'/bin/chmod 755 /etc/init.d/cinder-setup-backing-file',
}
->
exec 
{ 
	'making link':
	command=>'/bin/ln -s -f /etc/init.d/cinder-setup-backing-file /etc/rc2.d/S10cinder-setup-backing-file',

}
->
exec 
{ 
	'restart cinder-volume':
	command=>'/usr/sbin/service cinder-volume restart',
}
->
exec 
{ 
	'restart cinder-api':
	command=>'/usr/sbin/service cinder-api restart',
}
->
exec 
{ 
	'restart cinder-scheduler':
	command=>'/usr/sbin/service cinder-scheduler restart',
}




#while verifying,port no. 8776, error :ERROR: The server could not comply with the request since it is either malformed or otherwise incorrect.

